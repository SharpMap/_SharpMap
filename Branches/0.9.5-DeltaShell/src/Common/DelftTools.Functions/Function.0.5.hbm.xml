<?xml version="1.0" encoding="utf-8" ?>
<!-- TODO: split into file-per-class -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" namespace="DelftTools.Functions" assembly="DelftTools.Functions"  auto-import="false">
  <class name="DelftTools.Functions.IFunction, DelftTools.Functions" table="function" batch-size="200">
    <id name="Id" column="id" type="System.Int64" unsaved-value="0">
      <generator class="increment" />
    </id>
    <discriminator formula="case when type in ('flow_time_series', 'waterlevel_time_series') then 'time_series' else type end"/>
    
    <property name="Name" column="name" />

    <property name="IsEditable"/>

    <map name="Attributes" table="function_attributes">
      <key column="Id"/>
      <index column="key" type="System.String"/>
      <element column="value" type="System.String"/>
    </map>

    <list name="Arguments" cascade="save-update" table="function_arguments" batch-size="200" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[DelftTools.Functions.IVariable, DelftTools.Functions]], DeltaShell.Plugins.Data.NHibernate" >
      <key column="function_id"/>
      <index column="arguments_list_index" />
      <many-to-many class="DelftTools.Functions.IVariable, DelftTools.Functions" column="variable_id" />
    </list>

    <list name="Components" cascade="save-update" table="function_components"  batch-size="200" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[DelftTools.Functions.IVariable, DelftTools.Functions]], DeltaShell.Plugins.Data.NHibernate">
      <key column="function_id"/>
      <index column="components_list_index" />
      <many-to-many class="DelftTools.Functions.IVariable, DelftTools.Functions" column="variable_id" />
    </list>

    <list name="Filters" cascade="all-delete-orphan" batch-size="500" table="function_filters" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[DelftTools.Functions.Filters.IVariableFilter, DelftTools.Functions]], DeltaShell.Plugins.Data.NHibernate" >
      <key column="function_id"/>
      <index column="filters_list_index" />
      <many-to-many class="DelftTools.Functions.Filters.IVariableFilter, DelftTools.Functions"/>
    </list>

    <subclass name="Function" discriminator-value="vector function" batch-size="200">
      <many-to-one name="NHStore" cascade="all-delete-orphan" column="function_store_id" />
    </subclass>
  </class>

  <class name="IFunctionStore" table="function_stores" lazy="false">
    <id name="Id" column="id" type="System.Int64" unsaved-value="0" >
      <generator class="increment" />
    </id>
    
    <discriminator column="type" type="string"/>
    <!-- remove save-update here? Store is never owner only supplier o-->
    <list name="Functions" batch-size="200" cascade="save-update" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[DelftTools.Functions.IFunction, DelftTools.Functions]], DeltaShell.Plugins.Data.NHibernate">
      <key column="function_store_id"/>
      <index column="functions_list_index"/>
      <one-to-many class="IFunction" />
    </list>
    
    <subclass name="MemoryFunctionStore" discriminator-value="function_memory_store">
      <list name="FunctionValues" cascade="all-delete-orphan" batch-size="200" >
        <key column="function_store_id"/>
        <index column="function_values_index"/>
        <one-to-many class="IMultiDimensionalArray"/>
      </list>
    </subclass>    
  </class>  
</hibernate-mapping>