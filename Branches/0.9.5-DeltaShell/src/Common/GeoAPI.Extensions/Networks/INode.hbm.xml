<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2">
  <subclass name="GeoAPI.Extensions.Networks.INode, GeoAPI.Extensions" extends="GeoAPI.Extensions.Networks.INetworkFeature" lazy="false" discriminator-value="network_node">
    <list name="NodeFeatures" cascade="all-delete-orphan" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[GeoAPI.Extensions.Networks.INodeFeature, GeoAPI.Extensions]], DeltaShell.Plugins.Data.NHibernate" lazy="true" batch-size="500">
      <key column="node_id"/>
      <index column="node_list_index" />
      <one-to-many class="GeoAPI.Extensions.Networks.INodeFeature, GeoAPI.Extensions"/>
    </list>
    <list name="IncomingBranches" cascade="none" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[GeoAPI.Extensions.Networks.IBranch, GeoAPI.Extensions]], DeltaShell.Plugins.Data.NHibernate" lazy="true" batch-size="500">
      <key column="to_node_id"/>
      <index column="to_node_index" />
      <one-to-many class="GeoAPI.Extensions.Networks.IBranch, GeoAPI.Extensions"/>
    </list>
    <list name="OutgoingBranches" cascade="none" collection-type="DeltaShell.Plugins.Data.NHibernate.Collections.Generic.PersistentEventedListType`1[[GeoAPI.Extensions.Networks.IBranch, GeoAPI.Extensions]], DeltaShell.Plugins.Data.NHibernate" lazy="true" batch-size="500">
      <key column="from_node_id"/>
      <index column="from_node_index" />
      <one-to-many class="GeoAPI.Extensions.Networks.IBranch, GeoAPI.Extensions"/>
    </list>
    <subclass name="GeoAPI.Extensions.Networks.NodeStub, GeoAPI.Extensions" discriminator-value="node_stub" lazy="false"/>
  </subclass>
</hibernate-mapping>